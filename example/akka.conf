akka {
    actor {
        provider = cluster
        debug
        {
            receive = off            # log any received message
            autoreceive = off        # log automatically received messages, e.g. PoisonPill
            lifecycle = off          # log actor lifecycle changes
            event-stream = off       # log subscription changes for Akka.NET event stream
            unhandled = off          # log unhandled messages sent to actors
        }
    }
    # loggers = [ "wyvern.utils.DotNetCoreLogger, wyvern.api" ]
    logger-startup-timeout = 60s
    loglevel = INFO
    persistence {
        query.journal.sql {
            class = "Akka.Persistence.Query.Sql.SqlReadJournalProvider, Akka.Persistence.Query.Sql"
            write-plugin = ""
            refresh-interval = 3s
            max-buffer-size = 100
        }
	    journal {
	        plugin = "akka.persistence.journal.sql-server"
		    sql-server {
			    class = "Akka.Persistence.SqlServer.Journal.SqlServerJournal, Akka.Persistence.SqlServer"
			    plugin-dispatcher = "akka.actor.default-dispatcher"
			    connection-string = "Server=.;Initial Catalog=wyvern;Integrated Security=True;"
			    connection-timeout = 1s
			    schema-name = dbo
			    table-name = EventJournal
			    auto-initialize = on
			    timestamp-provider = "Akka.Persistence.Sql.Common.Journal.DefaultTimestampProvider, Akka.Persistence.Sql.Common"
			    metadata-table-name = Metadata
		    }
	    }

	    snapshot-store {
	        plugin = "akka.persistence.snapshot-store.sql-server"
		    sql-server {
			    class = "Akka.Persistence.SqlServer.Snapshot.SqlServerSnapshotStore, Akka.Persistence.SqlServer"
			    plugin-dispatcher = "akka.actor.default-dispatcher"
			    connection-string = "Server=.;Initial Catalog=wyvern;Integrated Security=True;"
			    connection-timeout = 1s
			    schema-name = dbo
			    table-name = SnapshotStore
			    auto-initialize = on
		    }
	    }
    }
    remote {
        dot-netty.tcp {
            hostname = 127.0.0.1
            port = 7000
            public-hostname = "localhost"
        }
    }
    cluster {
        seed-nodes = ["akka.tcp://ClusterSystem@localhost:7000"]
        roles = ["default"]
    }
}
wyvern {
    cluster.join-self = on
    broker.servicebus {
        client {
            default {
                endpoint = "amqp://guest:guest@localhost:5672"
                failure-exponential-backoff {
                    min = 3s
                    max = 30s
                    random-factor = 0.2
                }
            }
            producer = ${wyvern.broker.servicebus.client.default}
            producer.role = "default"
            consumer {
                failure-exponential-backoff = ${wyvern.broker.servicebus.client.default.failure-exponential-backoff}
                offset-buffer = 100
                batching-size = 20
                batching-interval = 5s
            }
        }
    }
    persistence {
        cluster.distribution {
            ensure-active-interval = 1s
        }
        read-side {
            run-on-role = "default"
        }
        ingestion {
            connection-string = "Server=.;Initial Catalog=wyvern;Integrated Security=True;"
        }
        ask-timeout = 5s
        snapshot-after = 100
        passivate-after-idle-timeout = 0
        run-entities-on-role = "default"
        max-number-of-shards = 10
    }
}
